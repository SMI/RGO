// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RGO.DataAccess.Data;

#nullable disable

namespace RGO.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240212103523_SeedRGO_Column_template")]
    partial class SeedRGO_Column_template
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RGO.Models.Group_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updated_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Group_Types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2180),
                            Name = "Research Group"
                        },
                        new
                        {
                            Id = 2,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2181),
                            Name = "Data Team"
                        });
                });

            modelBuilder.Entity("RGO.Models.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Group_TypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updated_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Group_TypeId");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2307),
                            Group_TypeId = 1,
                            Name = "Classification of Brain Images"
                        });
                });

            modelBuilder.Entity("RGO.Models.Models.Group_Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updated_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Group_Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2357),
                            Description = "Principal Investigator",
                            Name = "PI"
                        },
                        new
                        {
                            Id = 2,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2359),
                            Description = "Research Assistant",
                            Name = "RA"
                        },
                        new
                        {
                            Id = 3,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2361),
                            Description = "Ground Truther",
                            Name = "GT"
                        });
                });

            modelBuilder.Entity("RGO.Models.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrcId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updated_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactInfo = "gerry@yahoo.ac.uk",
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2329),
                            Name = "Gerry Thomson",
                            Notes = "Academic Neuroradiologist",
                            OrcId = "123ABC"
                        },
                        new
                        {
                            Id = 2,
                            ContactInfo = "grant@yahoo.ac.uk",
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2332),
                            Name = "Grant Mair",
                            Notes = "Senior Clinical Lecturer in Neuroradiology",
                            OrcId = "456DEF"
                        },
                        new
                        {
                            Id = 3,
                            ContactInfo = "smarti@yahoo.ac.uk",
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2333),
                            Name = "Smarti Reel",
                            Notes = "Postdoctoral Researcher",
                            OrcId = ""
                        },
                        new
                        {
                            Id = 4,
                            ContactInfo = "kara@yahoo.ac.uk",
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2335),
                            Name = "Kara Moraw",
                            Notes = "EPCC Applications Developer",
                            OrcId = ""
                        });
                });

            modelBuilder.Entity("RGO.Models.Models.Person_Group_Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("End_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Group_Id")
                        .HasColumnType("int");

                    b.Property<int>("Group_Role_Id")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Person_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Group_Id");

                    b.HasIndex("Group_Role_Id");

                    b.HasIndex("Person_Id");

                    b.ToTable("People_Group_Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2420),
                            Group_Id = 1,
                            Group_Role_Id = 3,
                            Person_Id = 1
                        },
                        new
                        {
                            Id = 2,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2422),
                            Group_Id = 1,
                            Group_Role_Id = 3,
                            Person_Id = 2
                        },
                        new
                        {
                            Id = 3,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2423),
                            Group_Id = 1,
                            Group_Role_Id = 1,
                            Person_Id = 3
                        },
                        new
                        {
                            Id = 4,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2425),
                            Group_Id = 1,
                            Group_Role_Id = 2,
                            Person_Id = 4
                        });
                });

            modelBuilder.Entity("RGO.Models.Models.RGO_Column_Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PK_Column_Order")
                        .HasColumnType("int");

                    b.Property<string>("Potentially_Disclosive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RGO_Dataset_TemplateId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updated_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RGO_Dataset_TemplateId");

                    b.ToTable("RGO_Column_Templates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2523),
                            Description = "Identifier of the study that this image is part of",
                            Name = "Study_Identifier",
                            PK_Column_Order = 1,
                            Potentially_Disclosive = "N",
                            RGO_Dataset_TemplateId = 1,
                            Type = "Char"
                        },
                        new
                        {
                            Id = 2,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2526),
                            Description = "Identifier of the series that this image is part of",
                            Name = "Series_Identifier",
                            PK_Column_Order = 2,
                            Potentially_Disclosive = "N",
                            RGO_Dataset_TemplateId = 1,
                            Type = "Char"
                        },
                        new
                        {
                            Id = 3,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2528),
                            Description = "Identifier of this image",
                            Name = "Image_Identifier",
                            PK_Column_Order = 3,
                            Potentially_Disclosive = "N",
                            RGO_Dataset_TemplateId = 1,
                            Type = "Char"
                        },
                        new
                        {
                            Id = 4,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2531),
                            Description = "The ground truth that classifies the type of MRI this is e.g. T1, T2",
                            Name = "MRI_Classification",
                            Potentially_Disclosive = "N",
                            RGO_Dataset_TemplateId = 1,
                            Type = "Char"
                        },
                        new
                        {
                            Id = 5,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2664),
                            Description = "An expert who generate this ground truth (1)",
                            Name = "Expert_1",
                            Potentially_Disclosive = "N",
                            RGO_Dataset_TemplateId = 1,
                            Type = "Int"
                        },
                        new
                        {
                            Id = 6,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2668),
                            Description = "An expert who generate this ground truth (2)",
                            Name = "Expert_2",
                            Potentially_Disclosive = "N",
                            RGO_Dataset_TemplateId = 1,
                            Type = "Int"
                        },
                        new
                        {
                            Id = 7,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2670),
                            Description = "The date on which this Ground Truth was recorded",
                            Name = "Date_GT_Recorded",
                            Potentially_Disclosive = "N",
                            RGO_Dataset_TemplateId = 1,
                            Type = "Date"
                        });
                });

            modelBuilder.Entity("RGO.Models.Models.RGO_Dataset_Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RGOutput_Id")
                        .HasColumnType("int");

                    b.Property<string>("Updated_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RGOutput_Id");

                    b.ToTable("RGO_Dataset_Templates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2496),
                            Description = "Classifying the type of Brain Scans, done by Gerry and Grant",
                            Name = "MRI Classification Group Truth",
                            RGOutput_Id = 1
                        });
                });

            modelBuilder.Entity("RGO.Models.Models.RGOutput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Originating_GroupId")
                        .HasColumnType("int");

                    b.Property<int>("RGO_TypeId")
                        .HasColumnType("int");

                    b.Property<string>("Updated_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Originating_GroupId");

                    b.HasIndex("RGO_TypeId");

                    b.ToTable("RGOutputs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2474),
                            Description = "Brain Scan Classifications",
                            Name = "MRI Classification Group Truth",
                            Originating_GroupId = 1,
                            RGO_TypeId = 1
                        });
                });

            modelBuilder.Entity("RGO.Models.RGO_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updated_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RGO_Types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_By = "seed",
                            Created_Date = new DateTime(2024, 2, 12, 10, 35, 23, 86, DateTimeKind.Utc).AddTicks(2452),
                            Description = "Annotations that have been manually created or validated by a human expert",
                            Name = "Group Truth"
                        });
                });

            modelBuilder.Entity("RGO.Models.Models.Group", b =>
                {
                    b.HasOne("RGO.Models.Group_Type", "Group_Type")
                        .WithMany()
                        .HasForeignKey("Group_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group_Type");
                });

            modelBuilder.Entity("RGO.Models.Models.Person_Group_Role", b =>
                {
                    b.HasOne("RGO.Models.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("Group_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RGO.Models.Models.Group_Role", "Group_Role")
                        .WithMany()
                        .HasForeignKey("Group_Role_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RGO.Models.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("Person_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Group_Role");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("RGO.Models.Models.RGO_Column_Template", b =>
                {
                    b.HasOne("RGO.Models.Models.RGO_Dataset_Template", "RGO_Dataset_Template")
                        .WithMany()
                        .HasForeignKey("RGO_Dataset_TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RGO_Dataset_Template");
                });

            modelBuilder.Entity("RGO.Models.Models.RGO_Dataset_Template", b =>
                {
                    b.HasOne("RGO.Models.Models.RGOutput", "RGOutput")
                        .WithMany()
                        .HasForeignKey("RGOutput_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RGOutput");
                });

            modelBuilder.Entity("RGO.Models.Models.RGOutput", b =>
                {
                    b.HasOne("RGO.Models.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("Originating_GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RGO.Models.RGO_Type", "RGO_Type")
                        .WithMany()
                        .HasForeignKey("RGO_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("RGO_Type");
                });
#pragma warning restore 612, 618
        }
    }
}
